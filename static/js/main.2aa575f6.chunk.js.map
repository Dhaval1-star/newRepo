{"version":3,"sources":["logo.svg","components/Navbar.js","components/Textform.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","Abouttxt","onClick","togglemode","role","htmlFor","Textform","useState","text","setText","heading","value","onChange","event","target","style","backgroundColor","rows","e","newtxt","toUpperCase","alert","toLowerCase","copy","document","querySelector","select","navigator","clipboard","writeText","split","length","About","mystyle","color","newstyle","Alert","textTransform","msg","defaultProps","App","setmode","setAlert","showAlert","message","setTimeout","body","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2aa575f6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">\r\n                        {props.title}\r\n                    </Link>\r\n                    <button\r\n                        className=\"navbar-toggler\"\r\n                        type=\"button\"\r\n                        data-bs-toggle=\"collapse\"\r\n                        data-bs-target=\"#navbarSupportedContent\"\r\n                        aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\"\r\n                        aria-label=\"Toggle navigation\"\r\n                    >\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                                    Home\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/about\">\r\n                                    {props.Abouttxt}\r\n                                </Link>\r\n                            </li>\r\n                        </ul>\r\n                        <form className=\"d-flex\">\r\n                        <div className={`form-check form-switch mx-5 text-${props.mode === `light` ?`dark`: `light`} `} onClick={props.togglemode}>\r\n                            <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{`Enable ${props.mode === `light` ?`dark`: `light`} mode`}</label>\r\n                        </div>\r\n                            {/* <input\r\n                                className=\"form-control me-2\"\r\n                                type=\"search\"\r\n                                placeholder=\"Search\"\r\n                                aria-label=\"Search\"\r\n                            />\r\n                            <button className=\"btn btn-outline-success\" type=\"submit\">\r\n                                Search\r\n                            </button> */}\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    );\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: propTypes.string.isRequired,\r\n    Abouttxt: propTypes.string\r\n};\r\n\r\nNavbar.defaultProps = {\r\n    title: \"manish\",\r\n    Abouttxt: \"Hello \"\r\n}\r\n","import React , {useState} from 'react'\r\n\r\nexport default function Textform(props) {\r\n\r\n    const [text, setText] = useState(\"Enter Your Text Here\");\r\n    const upClick = (e) => {\r\n        let newtxt = text.toUpperCase();\r\n        setText(newtxt);\r\n        props.alert(\"This Text Become Uppercase\",\"success\");\r\n    }\r\n    const loClick = (e) => {\r\n        let newtxt = text.toLowerCase();\r\n        setText(newtxt);\r\n        props.alert(\"This Text Become Lowercase\",\"success\");\r\n    }\r\n    const clClick = (e) => {\r\n        let newtxt = \"\";\r\n        setText(newtxt);\r\n        props.alert(\"This Text Clear The Text\",\"danger\");\r\n    }\r\n    const coClick = (e) => {\r\n        let copy = document.querySelector(\"#mybox\");\r\n        copy.select();\r\n        // console.log(copy.select());\r\n        // copy.setSelectionRange(0, 99999);\r\n        navigator.clipboard.writeText(copy.value);\r\n        // setText(newtxt);\r\n        props.alert(\"This Text Is Copyied\",\"warning\");\r\n    }\r\n    const handleChange = (event) => {\r\n        setText(event.target.value)\r\n    }\r\n    return (\r\n        <>\r\n        <div className={`container my-3 text-${props.mode === `light` ?`dark`: `light`} `} >\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea  value={text} onChange={handleChange} className={` text-${props.mode === 'light' ? 'dark' : 'light'} form-control`} \r\n                style={{backgroundColor: props.mode==='dark'?'gray':'white'}}\r\n                  id=\"mybox\" rows=\"8\" ></textarea>\r\n            </div>\r\n            <div className=\"btn btn-primary my-3 \" onClick={upClick}>convert to uppercase</div>\r\n            <div className=\"btn btn-primary my-3 mx-5\" onClick={loClick}>convert to lowecase</div>\r\n            <div className=\"btn btn-primary my-3\" onClick={clClick}>clear text</div>\r\n            <div className=\"btn btn-primary my-3 mx-5\" onClick={coClick}>copy text</div>\r\n        </div>\r\n        <div className={`container my-3 text-${props.mode === `light` ?`dark`: `light`} `}>\r\n            <h2>your text summary</h2>\r\n            <p>{text.split(\" \").length} words and  {text.length} character</p>\r\n            <p>{text.split(\" \").length/125} minute</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0 ? text : \"Enter Your Text for preview\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function About(props) {\r\n\r\n    let mystyle = {\r\n        text: 'disable dark mode',\r\n        color: 'white',\r\n        backgroundColor: 'gray',\r\n    }\r\n    let newstyle = {\r\n        color: 'gray',\r\n        backgroundColor: 'white',\r\n        text: 'enable dark mode'\r\n    }\r\n\r\n    \r\n    return (\r\n        <>\r\n        <div className=\"container my-5\" style={props.mode === 'dark' ? mystyle : newstyle}>\r\n            <h2>About Us</h2>\r\n            <div className=\"accordion\" id=\"accordionExample\" style={props.mode === 'dark' ? mystyle : newstyle}>\r\n                <div className=\"accordion-item\" style={props.mode === 'dark' ? mystyle : newstyle}>\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                    <button className=\"accordion-button\" style={props.mode === 'dark' ? mystyle : newstyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                        Accordion Item #1\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\">\r\n                        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\" style={props.mode === 'dark' ? mystyle : newstyle}>\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                    <button className=\"accordion-button collapsed\" style={props.mode === 'dark' ? mystyle : newstyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                        Accordion Item #2\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\">\r\n                        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\" style={props.mode === 'dark' ? mystyle : newstyle}>\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                    <button className=\"accordion-button collapsed\" style={props.mode === 'dark' ? mystyle : newstyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                        Accordion Item #3\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\">\r\n                        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                {/* <button className=\"btn btn-primary my-3\" onClick={props.togglemode}>{props.mode}</button> */}\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n        <>\r\n            {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show d-flex justify-content-between align-content-center`} role=\"alert\">\r\n                <div><strong style={{textTransform: \"capitalize\"}}>{(props.alert.type)}</strong> : {props.alert.msg}</div> \r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar';\r\nimport Textform from './components/Textform';\r\nimport About from './components/About';\r\nimport { useState } from 'react';\r\nimport Alert from './components/Alert';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Routes,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nexport default function App() {\r\n  const [mode, setmode] = useState('light');\r\n  const [alert, setAlert] = useState(null,null);\r\n\r\n  const showAlert = (message , type) => {\r\n    setAlert({\r\n      msg: message,\r\n      type : type\r\n    })\r\n    setTimeout(() => {\r\n      setAlert(null);\r\n    }, 3000)\r\n  }\r\n  // setInterval(() => {\r\n  //   document.title = \"Text Utils is amazing \";\r\n  // }, 1000);\r\n  // setInterval(() => {\r\n  //   document.title = \" install Text Utils \";\r\n  // }, 2000);\r\n  const togglemode = () => {\r\n    if (mode === 'light') {\r\n      setmode('dark');\r\n      document.body.style.backgroundColor = 'gray';\r\n      showAlert(\"dark mode enable \", \"success\");\r\n      document.title = \"Text utils -  dark mode \";\r\n    }else{\r\n      setmode('light');\r\n      document.body.style.backgroundColor = 'white';\r\n      showAlert(\"light mode enable \", \"danger\");\r\n      document.title = \"Text utils -  light mode \";\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n    <Router>\r\n        <Navbar  title=\"Dhaval\" Abouttxt=\"About Us\" mode={mode} togglemode={togglemode}/>\r\n        <Alert alert={alert} />\r\n        <Routes>\r\n          <Route exact path=\"/about\" element={<About mode={mode}  togglemode={togglemode} />} />\r\n          <Route exact path=\"/\" element={<Textform heading=\"Enter Text to Analysis\" mode={mode} togglemode={togglemode} alert={showAlert}/>} />\r\n        </Routes>\r\n    </Router>\r\n    </>\r\n  );\r\n}\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}